generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String  @default("")
  username String  @unique @default("")
  password String?

  roles      Role[]
  businesses Business[]
}

model Role {
  role_id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String @default("")

  users User[]
}

model Facebook {
  facebook_id                       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fb_name                           String?
  fb_access_token                   String
  date                              DateTime @db.Date
  reach                             Decimal? @db.Decimal()
  impressions                       Decimal? @db.Decimal()
  frequency                         Decimal? @db.Decimal()
  spend                             Decimal? @db.Decimal()
  cpm                               Decimal? @db.Decimal()
  outbound_clicks                   Decimal? @db.Decimal()
  cost_per_outbound_click           Decimal? @db.Decimal()
  outbound_clicks_ctr               Decimal? @db.Decimal()
  view_content                      Decimal? @db.Decimal()
  cost_per_view_content             Decimal? @db.Decimal()
  add_to_cart                       Decimal? @db.Decimal()
  cost_per_add_to_cart              Decimal? @db.Decimal()
  initiate_checkout                 Decimal? @db.Decimal()
  cost_per_initiate_checkout        Decimal? @db.Decimal()
  purchase                          Decimal? @db.Decimal()
  website_purchase                  Decimal? @db.Decimal()
  offline_purchase                  Decimal? @db.Decimal()
  cost_per_purchase                 Decimal? @db.Decimal()
  cost_per_unique_purchases         Decimal? @db.Decimal()
  purchase_conversion_value         Decimal? @db.Decimal()
  website_purchase_conversion_value Decimal? @db.Decimal()
  offline_purchase_conversion_value Decimal? @db.Decimal()
  purchase_roas                     Decimal? @db.Decimal()
  business_id                       String   @db.Uuid

  business Business @relation(fields: [business_id], references: [business_id])
}

model Business {
  business_id   String  @id @unique @db.Uuid
  business_name String?
  admin_id      String? @db.Uuid
  fb_id         String?
  shopify_id    String?

  users     User[]
  facebooks Facebook[]
  shopify   Shopify[]
}

model Shopify {
  shopify_id    String  @id @unique @db.VarChar
  shopify_name  String? @db.VarChar
  shopify_url   String  @unique @db.VarChar
  access_token  String  @unique @db.VarChar
  currency_code String?
  business_id   String  @db.Uuid

  orders         Order[]
  daily_insights Daily_insight[]
  business       Business        @relation(fields: [business_id], references: [business_id])
}

model Order {
  order_id                String    @id @unique @db.VarChar
  order_created_at        DateTime? @db.Timestamp(6)
  order_payment_status    String?   @db.VarChar
  order_fulfilment_status String?   @db.VarChar
  total_discount_amount   Int?
  // order_total_price
  // order_total_received
  // order_total_refunded
  // order_net_payment       Int? // total amount received - total amount refunded
  // channel_definition

  shopify_id String  @db.VarChar
  shopify    Shopify @relation(fields: [shopify_id], references: [shopify_id], onDelete: Cascade)

  transactions Transaction[]
}

model Transaction {
  transaction_id          String    @id @unique @db.VarChar
  transaction_created_at  DateTime? @db.Timestamp(6)
  transaction_kind        String?   @db.VarChar
  transaction_status      String?   @db.VarChar
  transaction_shop_amount Int?

  order    Order  @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
  order_id String @db.VarChar
}

model Daily_insight {
  created_at           DateTime @db.Timestamp(6)
  total_sales_amount   Int?
  total_refunds_amount Int?
  shopify              Shopify  @relation(fields: [shopify_id], references: [shopify_id], onDelete: Cascade)
  shopify_id           String   @db.VarChar

  @@id([created_at, shopify_id])
}
